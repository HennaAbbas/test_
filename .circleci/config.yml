version: 2.1

orbs:
  node: circleci/node@4.5.0

jobs:
  stress-frontend-e2e-test:
    machine:
      docker_layer_caching: false
      image: ubuntu-2204:current

    steps:
      - run: "hello world" 
              
  test-1:
    machine:
      docker_layer_caching: false
      image: ubuntu-2204:current

    steps:
      - run:
          command: |
            CANCEL_URL="https://circleci.com/api/v2/project/bb/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/job/${CIRCLE_BUILD_NUM}/cancel"
            echo "CANCEL_URL: $CANCEL_URL"
            curl -s -X POST -H "Circle-Token: ${CIRCLE_TOKEN}" -H "Content-Type: application/json" "$CANCEL_URL"
  test-2:
    machine:
      docker_layer_caching: false
      image: ubuntu-2204:current

    steps:
      - run:
          command: |
            CANCEL_URL="https://circleci.com/api/v2/project/bb/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/job/${CIRCLE_BUILD_NUM}/cancel"
            echo "CANCEL_URL: $CANCEL_URL"
            curl -s -X POST -H "Circle-Token: ${CIRCLE_TOKEN}" -H "Content-Type: application/json" "$CANCEL_URL"            

  test-3:
    machine:
      docker_layer_caching: false
      image: ubuntu-2204:current

    steps:
      - run:
          command: |
            sleep 500000
               


  deploy:
    machine:
      docker_layer_caching: false
      image: ubuntu-2204:current

    steps:
      - checkout
      - run: sleep 5000    
      #     name: Upload CodeCov.io Data
      #     command: bash <(curl -s https://codecov.io/bash) -F unittests
      #     when: on_fail # Uploads code coverage results, pass or fail
          

workflows:
  sqlmonitor:
    jobs:
      - stress-frontend-e2e-test
      - test: 
          requires: 
            - stress-frontend-e2e-test
      - test-1:
          requires: 
            - stress-frontend-e2e-test      
      - test-2:
          requires: 
            - stress-frontend-e2e-test      
      - test-3:
          requires: 
            - stress-frontend-e2e-test                  
      - deploy: 
          requires: 
            - test-3            
