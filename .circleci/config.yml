version: 2.1



parameters:
  nightly_cleanup:
    default: false
    type: boolean
  pull_request:
    default: false
    type: boolean    
#test
orbs:
  pulumi: pulumi/pulumi@1.0.0
  gh: circleci/github-cli@1.0

jobs:
  delete-obsolete-stacks:
    docker:
      - image: cimg/python:3.7
        auth:
          username: firstvettech
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/firstvet/webapp
    steps:
      - run: env
      - checkout
      - run:
          name: Store AWS credentials
          command: |
            echo "export AWS_DEFAULT_REGION=eu-north-1" >> $BASH_ENV
            echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PULUMI_STAGING" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PULUMI_STAGING" >> $BASH_ENV
            echo "export PULUMI_CONFIG_PASSPHRASE='$PULUMI_PASSWORD_FOR_SECRETS_STAGING'" >> $BASH_ENV
     
  deploy_infra:
    docker:
      - image: cimg/node:18.16.0
    working_directory: ~/firstvet/webapp
    steps:
      - checkout
      - run:
          name: Store AWS credentials
          command: |
            echo "export AWS_DEFAULT_REGION=eu-north-1" >> $BASH_ENV
            if [ "${CIRCLE_BRANCH}" = "master" ]; then
              echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PULUMI_PRODUCTION" >> $BASH_ENV
              echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PULUMI_PRODUCTION" >> $BASH_ENV
              echo "export PULUMI_CONFIG_PASSPHRASE='$PULUMI_PASSWORD_FOR_SECRETS_PRODUCTION'" >> $BASH_ENV
              echo "export PULUMI_STATE_FILE=pulumi.state.prod" >> $BASH_ENV
              environment=production
            else
              echo "export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PULUMI_STAGING" >> $BASH_ENV
              echo "export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PULUMI_STAGING" >> $BASH_ENV
              echo "export PULUMI_CONFIG_PASSPHRASE='$PULUMI_PASSWORD_FOR_SECRETS_STAGING'" >> $BASH_ENV
              echo "export PULUMI_STATE_FILE=pulumi.state" >> $BASH_ENV
              environment=staging
            fi
            # Various resources (especially on the load balancer side) don't support long names or special characters
            clean_branch_name=`echo ${CIRCLE_BRANCH:0:38} | sed "s,[^A-Za-z0-9],-,g" | tr '[:upper:]' '[:lower:]'`
            echo "STACK_NAME=webapp-${environment}--${clean_branch_name}" >> $BASH_ENV
     
      - run:
          name: Check for newer workflow
          background: true
          command: |
            while true; do
              sleep 5
              LATEST_COMMIT=$(git ls-remote $CIRCLE_REPOSITORY_URL | grep $CIRCLE_BRANCH | cut -f 1)
              if [ "$LATEST_COMMIT" != "$CIRCLE_SHA1" ]; then
                echo "more recent commit to branch, exiting"
                curl -X POST "https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/cancel?circle-token=$CIRCLE_API_TOKEN"
              fi
            done  
  build:
    docker:
      - image: gcc:latest
    working_directory: ~/work
    steps:
      - checkout
      # - run: make
      - run: |
          ulimit -c unlimited
          ./dump
      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* /tmp/core_dumps
          when: on_fail
      - store_artifacts:
          path: /tmp/core_dumps            

workflows:
  cleanup:
    when: 
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ true, << pipeline.parameters.nightly_cleanup >> ]
    jobs:
      - delete-obsolete-stacks
  deploy:
    jobs:
      - deploy_infra:
          context:
            - DockerHub-Auth
          filters:
            branches:
              ignore:
                - master
      - build              
  build-dev-deploy:
    when: << pipeline.parameters.pull_request >>
    jobs:
      - deploy_infra
