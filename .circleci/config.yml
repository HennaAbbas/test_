version: 2.1


jobs:
  sayhello: # defines a parameterized job
    description: A job that does very little other than demonstrate what a parameterized job looks like
    parameters:
      saywhat:
        description: "To whom shall we say hello?"
        default: "World"
        type: string
      image:
        type: string
        default: cimg/python:3.13.3
        description: Specifies the machine image to use for the executor   
    docker:
      - image: << parameters.image >>
        
    steps:
      - run: circleci step halt
      - run: echo "Hello << parameters.saywhat >>"
  publish-npm:
    parameters:
      package:
        description: Path to the package directory (ex. packages/react)
        type: string
    docker:
      - image: cimg/node:22.13.1@sha256:2a7a5e8a81de3e45b6b09f67f068bf378c281df83c6b0b44d6cdd91b2f1f1ab8
    steps:

      - run:
          name: "üìã Check << parameters.package >> version"
          command: |
            echo "=== Checking << parameters.package >> version ==="
            
            PACKAGE_VERSION=$(node -p "require('./<< parameters.package >>/package.json').version")
            PACKAGE_NAME=$(node -p "require('./<< parameters.package >>/package.json').name")
            
            echo "üì¶ Package: $PACKAGE_NAME"
            echo "üè∑Ô∏è  Version: $PACKAGE_VERSION"
            
            if ./check-package-version.sh << parameters.package >>; then
              echo "üÜï Status: NEW VERSION - ready to publish"
              echo 'export SHOULD_PUBLISH="true"' >> $BASH_ENV
            else
              echo "‚è≠Ô∏è  Status: VERSION EXISTS - will skip publish step"
              echo 'export SHOULD_PUBLISH="false"' >> $BASH_ENV
            fi
            
            echo "‚úÖ Version check completed"
      
      # This step runs when publishing is needed
      - run:
          name: "üöÄ Publish << parameters.package >>"
          command: |
            echo "üöÄ Publishing << parameters.package >>..."
            cd ./<< parameters.package >> && jfrog rt npm-publish --build-name=$CIRCLE_PROJECT_REPONAME --build-number=$CIRCLE_BUILD_NUM
            echo ""
            echo "‚úÖ SUCCESS: Package << parameters.package >> published to registry"
          when:
            condition:
              equal: [ "true", "$SHOULD_PUBLISH" ]
      
      # This step runs when skipping (shows as a step that ran)
      - run:
          name: "‚è≠Ô∏è  Skip << parameters.package >> (version exists)"
          command: |
            echo "‚è≠Ô∏è  SKIPPED: Package << parameters.package >> not published"
            echo "üìù Reason: Version already exists in registry"
            echo "üí° To publish: increment version in << parameters.package >>/package.json"
            echo "‚úÖ This is expected behavior for unchanged packages"
          when:
            condition:
              equal: [ "false", "$SHOULD_PUBLISH" ]      

workflows:
  build:
    jobs:
      - sayhello: # invokes the parameterized job
          saywhat: Everyone
      - publish-npm:
          name: publish @heartwood/utils
          package: packages/utils

  
